# Challenge Lab: Create and Manage Cloud Resources - My final code
    
    ## Create project jumpshot instance
    
    ```
    gcloud compute instances create nucleus-jumphost-772 \
    --network nucleus-vpc \
    --zone us-east1-c \
    --machine-type f1-micro \
    --image-family debian-10 \
    --image-project debian-cloud
    
    ```
    
    ## Create kubernetes services clusters
    
    ```
    gcloud container clusters create nucleus-backend \
    --num-nodes 1 \
    --network nucleus-vpc \
    --zone us-east1-c
    
    gcloud container clusters get-credentials nucleus-backend \
    --zone us-east1-c
    
    kubectl create deployment hello-server \
    --image=gcr.io/google-samples/hello-app:2.0
    
    kubectl expose deployment hello-server \
    --type=LoadBalancer \
    --port 8083
    
    ```
    
   ## Create startup.sh file
    
    ```
    cat << EOF > startup.sh
    #! /bin/bash
    apt-get update
    apt-get install -y nginx
    service nginx start
    sed -i -- 's/nginx/Google Cloud Platform - '"\$HOSTNAME"'/' /var/www/html/index.nginx-debian.html
    EOF
    
    ```
    
   ## Create an instance template
    
    ```
    gcloud compute instance-templates create web-server-template \
    --metadata-from-file startup-script=startup.sh \
    --network nucleus-vpc \
    --machine-type g1-small \
    --region us-east1
    
    ```
    
   ## Create a managed instance group
    
    ```
    gcloud compute instance-groups managed create web-server-group \
    --base-instance-name web-server \
    --size 2 \
    --template web-server-template \
    --region us-east1
    
    ```
    
   ## Create a firewall rule to allow traffic (80/tcp)
    
    ```
    gcloud compute firewall-rules create accept-tcp-rule-152 \
    --allow tcp:80 \
    --network nucleus-vpc
    
    ```
    
   ## Create a health check
    
    ```
    gcloud compute http-health-checks create http-basic-check
    
    ```
    
   ## Create a backend service and attach the manged instance group
    
    ```
    gcloud compute instance-groups managed \
    set-named-ports web-server-group \
    --named-ports http:80 \
    --region us-east1
    
    ```
    
   ## Create a backend service and attach the manged instance group
    
    ```
    gcloud compute backend-services create web-server-backend \
    --protocol HTTP \
    --http-health-checks http-basic-check \
    --global
    
    ```
    
   ## Create a URL map and target HTTP proxy to route requests to your URL map
    
    ```
    gcloud compute backend-services add-backend web-server-backend \
    --instance-group web-server-group \
    --instance-group-region us-east1 \
    --global
    
   ## gcloud compute url-maps create web-server-map \
    --default-service web-server-backend
    
   ## gcloud compute target-http-proxies create http-lb-proxy \
    --url-map web-server-map
    
    ```
    
   ## Create a forwarding rule
    
    ```
    gcloud compute forwarding-rules create http-content-rule \
    --global \
    --target-http-proxy http-lb-proxy \
    --ports 80
    
    gcloud compute forwarding-rules list
